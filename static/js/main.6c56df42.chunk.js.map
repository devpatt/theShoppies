{"version":3,"sources":["views/home/index.js","App.jsx","serviceWorker.js","index.js"],"names":["Home","props","addNomination","result","state","nominations","length","filter","obj","imdbID","setState","removeNomination","handleInputChange","event","searchTerm","target","value","handleSearch","submittedSearchTerm","axios","method","url","params","apikey","s","catch","error","console","log","response","then","data","Response","hasOwnProperty","searchResults","Search","searchError","searchErrorMsg","Error","preventDefault","className","this","onSubmit","type","onChange","map","key","Title","Year","disabled","onClick","React","Component","App","path","exact","component","HomePage","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"8UA2JeA,G,wDAtJb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IASRC,cAAgB,SAACC,GAEb,EAAKC,MAAMC,YAAYC,OAAS,GAElB,IADd,EAAKF,MAAMC,YAAYE,QAAO,SAACC,GAAD,OAASA,EAAIC,SAAWN,EAAOM,UAC1DH,QAEH,EAAKI,SAAS,CAAEL,YAAY,GAAD,mBAAM,EAAKD,MAAMC,aAAjB,CAA8BF,OAhB1C,EAoBnBQ,iBAAmB,SAACR,GAClB,EAAKO,SAAS,CACZL,YAAa,EAAKD,MAAMC,YAAYE,QAAO,SAACC,GAC1C,OAAOA,EAAIC,SAAWN,EAAOM,aAvBhB,EA4BnBG,kBAAoB,SAACC,GACnB,EAAKH,SAAS,CAAEI,WAAYD,EAAME,OAAOC,SA7BxB,EAgCnBC,aAAe,SAACJ,GACd,EAAKH,SAAS,CAAEQ,oBAAqB,EAAKd,MAAMU,aAChDK,IAAM,CACJC,OAAQ,MACRC,IAAK,0BACLC,OAAQ,CAAEC,OAAQ,WAAYC,EAAG,EAAKpB,MAAMU,cAE3CW,OAAM,SAAUC,GAEf,OADAC,QAAQC,IAAIF,GACLA,EAAMG,YAEdC,MAAK,SAACD,GACL,IAAIE,EAAOF,EAASE,KACpBJ,QAAQC,IAAIG,GACRA,EAAKC,UAAYD,EAAKE,eAAe,UACvC,EAAKvB,SAAS,CACZwB,cAAeH,EAAKI,OACpBC,aAAa,IAGf,EAAK1B,SAAS,CACZ0B,aAAa,EACbC,eAAgBN,EAAKO,WAK7BzB,EAAM0B,kBAzDN,EAAKnC,MAAQ,CACXU,WAAY,GACZT,YAAa,IAJE,E,kGA8DT,IAAD,OACP,OACE,yBAAKmC,UAAU,QACb,yBAAKA,UAAU,mBACsB,IAAlCC,KAAKrC,MAAMC,YAAYC,QACtB,yBAAKkC,UAAU,mBACb,yBAAKA,UAAU,yBAAf,kDAKJ,yBAAKA,UAAU,eAAe,gBAE9B,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,2BAA2B,eAC1C,0BACEA,UAAU,yBACVE,SAAUD,KAAKxB,cAEf,2BACE0B,KAAK,OACL3B,MAAOyB,KAAKrC,MAAMU,WAClB8B,SAAUH,KAAK7B,kBACf4B,UAAU,iBAEZ,2BAAOG,KAAK,SAAS3B,MAAM,aAI/B,yBAAKwB,UAAU,kBACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,4BAAf,gBACgBC,KAAKrC,MAAMc,oBAD3B,KAGCuB,KAAKrC,MAAMgC,YACV,yBAAKI,UAAU,4BACZC,KAAKrC,MAAMiC,gBAGd,wBAAIG,UAAU,2BACXC,KAAKrC,MAAM8B,eACVO,KAAKrC,MAAM8B,cAAcW,KAAI,SAAC1C,GAC5B,OACE,wBAAI2C,IAAK3C,EAAOM,QACbN,EAAO4C,MADV,KACmB5C,EAAO6C,KAD1B,IAEE,4BACEC,SAGe,IAFb,EAAK7C,MAAMC,YAAYE,QACrB,SAACC,GAAD,OAASA,EAAIC,SAAWN,EAAOM,UAC/BH,OAEJkC,UAAU,kBACVU,QAAS,kBAAM,EAAKhD,cAAcC,KAPpC,kBAiBd,yBAAKqC,UAAU,yBACb,yBAAKA,UAAU,gCAAf,eACA,wBAAIA,UAAU,+BACXC,KAAKrC,MAAMC,aACVoC,KAAKrC,MAAMC,YAAYwC,KAAI,SAAC1C,GAC1B,OACE,wBAAI2C,IAAK3C,EAAOM,QACbN,EAAO4C,MADV,KACmB5C,EAAO6C,KAD1B,IAEE,4BACER,UAAU,gBACVU,QAAS,kBAAM,EAAKvC,iBAAiBR,KAFvC,uB,GArILgD,IAAMC,YCqBVC,E,kDAnBb,WAAYpD,GAAQ,IAAD,8BACjB,cAAMA,IAEDG,MAAQ,GAHI,E,kGASjB,OACE,yBAAKoC,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOc,KAAK,eAAeC,OAAK,EAACC,UAAWC,U,GAbpCN,IAAMC,WCOJM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCXNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOR,UAAWH,KAEpBY,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvC,MAAK,SAAAwC,GACJA,EAAaC,gBAEd9C,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAM8C,c","file":"static/js/main.6c56df42.chunk.js","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./styles.scss\";\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchTerm: \"\",\r\n      nominations: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  addNomination = (result) => {\r\n    if (\r\n      this.state.nominations.length < 5 &&\r\n      this.state.nominations.filter((obj) => obj.imdbID === result.imdbID)\r\n        .length === 0\r\n    ) {\r\n      this.setState({ nominations: [...this.state.nominations, result] });\r\n    }\r\n  };\r\n\r\n  removeNomination = (result) => {\r\n    this.setState({\r\n      nominations: this.state.nominations.filter((obj) => {\r\n        return obj.imdbID !== result.imdbID;\r\n      }),\r\n    });\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({ searchTerm: event.target.value });\r\n  };\r\n\r\n  handleSearch = (event) => {\r\n    this.setState({ submittedSearchTerm: this.state.searchTerm });\r\n    axios({\r\n      method: \"get\",\r\n      url: \"http://www.omdbapi.com/\",\r\n      params: { apikey: \"fba37e8d\", s: this.state.searchTerm },\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        return error.response;\r\n      })\r\n      .then((response) => {\r\n        let data = response.data;\r\n        console.log(data);\r\n        if (data.Response && data.hasOwnProperty(\"Search\")) {\r\n          this.setState({\r\n            searchResults: data.Search,\r\n            searchError: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            searchError: true,\r\n            searchErrorMsg: data.Error,\r\n          });\r\n        }\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <div className=\"main__container\">\r\n          {this.state.nominations.length === 5 && (\r\n            <div className=\"success__banner\">\r\n              <div className=\"success__banner__text\">\r\n                You have successfully selected 5 nominations!\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div className=\"main__title\">{\"The Shoppies\"}</div>\r\n\r\n          <div className=\"search_container\">\r\n            <div className=\"search_container__title\">{\"Movie title\"}</div>\r\n            <form\r\n              className=\"search_container__form\"\r\n              onSubmit={this.handleSearch}\r\n            >\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.searchTerm}\r\n                onChange={this.handleInputChange}\r\n                className=\"search_input\"\r\n              />\r\n              <input type=\"submit\" value=\"Search\"></input>\r\n            </form>\r\n          </div>\r\n\r\n          <div className=\"body_container\">\r\n            <div className=\"results_container\">\r\n              <div className=\"results_container__title\">\r\n                Results for \"{this.state.submittedSearchTerm}\"\r\n              </div>\r\n              {this.state.searchError ? (\r\n                <div className=\"results_container__error\">\r\n                  {this.state.searchErrorMsg}\r\n                </div>\r\n              ) : (\r\n                <ul className=\"results_container__list\">\r\n                  {this.state.searchResults &&\r\n                    this.state.searchResults.map((result) => {\r\n                      return (\r\n                        <li key={result.imdbID}>\r\n                          {result.Title} ({result.Year})\r\n                          <button\r\n                            disabled={\r\n                              this.state.nominations.filter(\r\n                                (obj) => obj.imdbID === result.imdbID\r\n                              ).length !== 0\r\n                            }\r\n                            className=\"nominate_button\"\r\n                            onClick={() => this.addNomination(result)}\r\n                          >\r\n                            Nominate\r\n                          </button>\r\n                        </li>\r\n                      );\r\n                    })}\r\n                </ul>\r\n              )}\r\n            </div>\r\n            <div className=\"nominations_container\">\r\n              <div className=\"nominations_container__title\">Nominations</div>\r\n              <ul className=\"nominations_container__list\">\r\n                {this.state.nominations &&\r\n                  this.state.nominations.map((result) => {\r\n                    return (\r\n                      <li key={result.imdbID}>\r\n                        {result.Title} ({result.Year})\r\n                        <button\r\n                          className=\"remove_button\"\r\n                          onClick={() => this.removeNomination(result)}\r\n                        >\r\n                          Remove\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport HomePage from \"./views/home\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/theShoppies\" exact component={HomePage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Route component={App} />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}